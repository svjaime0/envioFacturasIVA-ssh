
	y»SÀ$3NÆπ\‰°4ù'defVar --name sucesso --type Boolean
defVar --name tentativas --type Numeric
defVar --name connection --type EmailConnection
defVar --name destinatarioEmail --type List --innertype String
defVar --name calendarioExcel --type Excel
defVar --name tabelaCalendario --type DataTable
defVar --name dataAtual --type DateTime
defVar --name dataAtualTexto --type String
defVar --name _num --type Numeric
defVar --name _texto --type String
defVar --name tabela --type DataTable
defVar --name linha --type Numeric
defVar --name coluna --type Numeric
defVar --name dataHora --type DateTime
defVar --name mes --type Numeric
defVar --name dia --type Numeric
defVar --name valorObtido --type String
onError --label TratamentoErro

goSub --label ValidacaoDiaUtil

goSub --label ManipularDFVMOV7

//messageBox --title BancoValor --text Teste --icon "Information" --buttons "OK" --defaultbutton "FirstButton"
goSub --label ManipularProcvFactNCBK

goSub --label ManipularProcvFacturasFG

goSub --label FiltroBalcoes
beginSub --name TratamentoErro
logMessage --message "LOG ERRO\r\n- Linha: ${rpa:error.LineNumber}\r\n- Comando: ${rpa:error.Command}\r\n- Mensagem: ${rpa:error.Message}\r\n- Rotina: ${rpa:error.Routine}\r\n- Script: ${rpa:error.Script}" --type "Error"
exchangeConnect --exchangeversion "Exchange2013" --exchangeurl "https://mail.bancovalor.ao/EWS/Exchange.asmx" --enablesslvalidation  --username "banco.valor" --mailusername "banco.valor@bancovalor.ao" --mailpassword "v+HVl=#D\\,Dg" connection=value
add --collection "${destinatarioEmail}" --value "email@bancovalor.ao"
emailSend --connection ${connection} --to ${destinatarioEmail} --from "banco.valor@bancovalor.ao" --subject "RPA | Facturas IVA - Falha na execu√É¬ß√É¬£o" --bodytype "Text" --body "<p>Sauda√É¬ß√É¬µes Car√É¬≠ssimos,\n\nApresentou falha na execu√É¬ß√É¬£o do rob√É¬¥:\n</p><p>- Linha: ${rpa:error.LineNumber}</p><p>- Comando: ${rpa:error.Command}</p><p>\n\n\n- Mensagem: ${rpa:error.Message}</p><p>Banco Valor SA,\n\nCordialmente,\n</p>"
emailDisconnect --connection ${connection}
endSub
beginSub --name ManipularProcvFactNCBK
for --variable ${tentativas} --from 1 --to 3 --step 1
	executeScript --handleError  --name EnvioFatura_ManipularProcvFactNCBK --comment EnvioFatura_ManipularProcvFactNCBK sucesso=value
	if --left "${sucesso}" --operator "Is_True"
		break
	endIf
next
assert --message "Falha na execu√ß√£o do rob√¥ ${wdg:subName}" --left "${sucesso}" --operator "Is_True"
endSub
beginSub --name ManipularProcvFacturasFG
for --variable ${tentativas} --from 1 --to 3 --step 1
	executeScript --handleError  --name EnvioFatura_ManipularProcvFactFG --comment EnvioFatura_ManipularProcvFacturasFG sucesso=value
	if --left "${sucesso}" --operator "Is_True"
		break
	endIf
next
assert --message "Falha na execu√ß√£o do rob√¥ ${wdg:subName}" --left "${sucesso}" --operator "Is_True"
endSub
beginSub --name FiltroBalcoes
executeScript --handleError  --name EnvioFatura_FiltroBalcoes --comment EnvioFatura_FiltroBalcoes sucesso=value
assert --message "Falha na execu√ß√£o do rob√¥ ${wdg:subName}" --left "${sucesso}" --operator "Is_True"
endSub
beginSub --name ManipularDFVMOV7
executeScript --handleError  --name EnvioFatura_ManipularDFVMOV7 --comment EnvioFatura_ManipularDFVMOV7 sucesso=value
assert --message "Falha na execu√ß√£o do rob√¥ ${wdg:subName}" --left "${sucesso}" --operator "Is_True"
endSub
beginSub --name ExportarQueryBanka
executeScript --name Banka_LoginMacro --comment Banka_LoginMacro sucesso=value
//**Tem um rob√É¬¥ que exporta a query?
assert --message "Falha na execu√ß√£o do rob√¥ ${wdg:subName}" --left "${sucesso}" --operator "Is_True"
endSub
beginSub --name ValidacaoDiaUtil
excelOpen --file "C:\\Users\\RPAROBOTST\\Desktop\\ENVIO DE FACTURAS IVA\\PRODUCAO_ENVIO_DE_FACTURAS\\Calend√°rio EXXIS.xlsx" calendarioExcel=value
excelGetTable --file ${calendarioExcel} --getfirstsheet  --entiretable  --hasheaders  tabela=value linha=rows coluna=columns
excelClose --file ${calendarioExcel}
getCurrentDateAndTime --localorutc "LocalTime" --getcurrentdateonly  dataHora=value
getDatePart --date "${dataHora}" --type "Months" mes=value
getDatePart --date "${dataHora}" --type "Days" dia=value
getTableCell --dataTable ${tabela} --column ${mes} --row ${dia} valorObtido=value
case --switches "Any"
	when --left "${valorObtido}" --operator "Equal_To" --right F
	when --left "${valorObtido}" --operator "Equal_To" --right P
	when --left "${valorObtido}" --operator "Equal_To" --right S√ÅB
	when --left "${valorObtido}" --operator "Equal_To" --right DOM
then
	logMessage --message "Rob√¥ n√£o √© executado na data de hoje." --type "Info"
	stopExecution
otherwise
	logMessage --message "Dia √∫til" --type "Info"
endCase
endSub
beginSub --name ConversorXMLpXLSX
executeScript --handleError  --name EnvioFatura_ConversorXMLpXLSX sucesso=value
assert --message "Falha na execu√ß√£o do rob√¥ ${wdg:subName}" --left "${sucesso}" --operator "Is_True"
endSub"	ÉRáˆV»ÏF∏£Î®ß-æ¥*21.0.3.0