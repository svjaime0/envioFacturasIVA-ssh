
	«c×íäNGœŽÝ’qìäÄ‰defVar --name janela01 --type Window
defVar --name idProcesso --type Numeric
defVar --name sucesso --type Boolean
defVar --name janela02 --type Window
defVar --name macro --type String
defVar --name caminhoPadrao --type String
defVar --name banka --type String
defVar --name campo --type String
defVar --name janelaMacro --type Window
defVar --name caminhoUsuario --type String
defVar --name listaFicheiros --type List --innertype String
defVar --name nomeFicheiro --type String
defVar --name janelaDisconect --type Window
defVar --name janelaSignon --type Window
defVar --name senha_Inicial --type String --value "banco@"
defVar --name varPRD --type String --value PRODUÃ‡ÃƒO
defVar --name connection --type EmailConnection
defVar --name paraEmail --type List --innertype String --value "[valordirecto@bancovalor.ao]"
defVar --name emCC --type List --innertype String --value "[valordirecto@bancovalor.ao]"
defVar --name dataLocal --type DateTime
defVar --name dia --type Numeric
defVar --name ficheiroXML --type String
defVar --name ficheiroExcel --type String
defVar --name excel --type Excel
defVar --name tabela --type DataTable
defVar --name diretorio --type String
defVar --name success --type Boolean
defVar --name nomeFicheiroExcel --type String
defVar --name caminhoQuerie241 --type String --value "Y:\\"
defVar --name diretorioDCCG_IVA --type String --value "Z:\\DCCG - IVA\\RPAROBOT bvalor01"
defVar --name dataValidarDiretorios --type DateTime
defVar --name ano --type Numeric
defVar --name mes --type Numeric
defVar --name nomeFicheiroQuerie241 --type String
defVar --name directorioRPA --type Boolean
defVar --name querieExiste --type Boolean
defVar --name errors --type List --innertype String
defVar --name warn --type List --innertype String
defVar --name validarTentativas --type Numeric
setVar --name "${caminhoPadrao}" --value "C:\\Users\\RPAROBOTST\\AppData\\Roaming\\IBM\\Client Access\\Emulator\\private" --comment "Definir um diretorio padrÃ£o para salvar os arquivos"

exchangeConnect --exchangeversion "Exchange2013" --exchangeurl "https://mail.bancovalor.ao/EWS/Exchange.asmx" --enablesslvalidation  --username "banco.valor" --mailusername "banco.valor@bancovalor.ao" --mailpassword "v+HVl=#D\\,Dg" connection=value

goSub --label ObterSenha
goSub --label eliminarMacros
goSub --label CriarMacroAtualizada
goSub --label ExecutarMacroLogin
goSub --label eliminarMacros

delay --timeout "00:00:15"

goSub --label ConversorXMLpXLSX

beginSub --name ExecutarMacroLogin
//launchOrAttach --executablepath "C:\\Program Files (x86)\\IBM\\Client Access\\Emulator\\pcsws.exe" --parameters PRODUÃ‡ÃƒO --useregex  --regexPattern Session --regexOptions "0" --timeout "00:00:30" janela01=value idProcesso=processId sucesso=success
//attachWindow --window ${janela01}
launchOrAttach --executablepath "C:\\Program Files (x86)\\IBM\\Client Access\\Emulator\\pcsws.exe" --parameters "${varPRD}" --useregex  --regexPattern Session --regexOptions "0" --timeout "00:00:30" janela01=value idProcesso=processId sucesso=success
attachWindow --window ${janela01}
waitWindow --classname "#32770" --safesearch  janelaSignon=value sucesso=success
click --selector "XPath" --controlsimilarity 100 --xpath "/root/edit[2]"
typeText --text RPAROBOTST
click --selector "XPath" --controlsimilarity 100 --xpath "/root/edit[1]"
typeText --text "${senha_Inicial}${banka}"
click --selector "XPath" --controlsimilarity 100 --xpath "/root/button[2]"
//TELA PARA EXECUTAR A MACRO
delay --timeout "00:00:05"
keyboard --type "KeyPress" --key "LMenu"
keyboard --type "KeyDown" --key "A"
keyboard --type "KeyUp" --key "LMenu"
delay --timeout "00:00:05"
keyboard --type "KeyDown" --key "F"
waitWindow --title "Keyboard/Macro/Script Function" --classname "#32770" --processname pcsws --safesearch  janelaMacro=value sucesso=success
click --selector "XPath" --controlsimilarity 100 --xpath "/root/button[3]"
delay --timeout "00:01:00"
//#Momento em que o farÃ¡ o desconect e exit no Banka
//#Momento Disconect
keyboard --type "KeyPress" --key "LMenu"
keyboard --type "KeyDown" --key "C"
delay --timeout "00:00:05"
//keyboard --type "KeyDown" --key "Down"
//delay --timeout "00:00:05"
keyboard --type "KeyDown" --key "Return"
keyboard --type "KeyUp" --key "LMenu"
delay --timeout "00:00:05"
//#Momento Exit
keyboard --type "KeyPress" --key "LMenu"
keyboard --type "KeyDown" --key "F"
delay --timeout "00:00:05"
keyboard --type "KeyDown" --key "Down"
keyboard --type "KeyDown" --key "Down"
keyboard --type "KeyDown" --key "Down"
keyboard --type "KeyDown" --key "Down"
keyboard --type "KeyDown" --key "Down"
keyboard --type "KeyDown" --key "Down"
keyboard --type "KeyDown" --key "Down"
keyboard --type "KeyDown" --key "Down"
keyboard --type "KeyDown" --key "Down"
keyboard --type "KeyDown" --key "Down"
keyboard --type "KeyDown" --key "Down"
keyboard --type "KeyDown" --key "Down"
delay --timeout "00:00:05"
keyboard --type "KeyDown" --key "Return"
keyboard --type "KeyUp" --key "LMenu"
//click --selector "XPath" --controlsimilarity 100 --xpath "/root/menubar[1]/menuitem[4]"
//click --selector "Id" --controlsimilarity 100 --id 1105
//click --selector "XPath" --controlsimilarity 100 --xpath "/root/menubar[1]/menuitem[4]"
//click --selector "XPath" --controlsimilarity 100 --xpath "/root"
//delay --timeout "00:00:05"
//click --selector "Id" --controlsimilarity 100 --id 1033
//keyboard --type "KeyDown" --key "Down"
//keyboard --type "KeyDown" --key "Down"
//delay --timeout "00:00:05"
//keyboard --type "KeyDown" --key "Return"
delay --timeout "00:01:00"
findWindow --useregex  --regexPattern "Session*" --regexOptions "0" --classname IEFrame --byparent  --window ${janela01} --safesearch  janela02=value idProcesso=processId sucesso=success
onError --executenext 
attachWindow --window ${janela02}
closeWindow --window ${janela01} sucesso=value
closeWindow --timeout "00:01:30" --window ${janela02} sucesso=value
endSub
beginSub --name CriarMacroAtualizada
setVar --name "${macro}" --value "[PCOMM SCRIPT HEADER]\r\nLANGUAGE=VBSCRIPT\r\nDESCRIPTION=\r\n[PCOMM SCRIPT SOURCE]\r\nOPTION EXPLICIT\r\nautECLSession.SetConnectionByName(ThisSessionName)\r\n\r\nDim facturas_IVA\r\n\r\nDim dataLocal\r\nDim ano\r\nDim mes\r\nDim dia \r\nDim num\r\n\r\ndataLocal = Date()\r\n\r\nano = Year(Date())\r\nmes = Month(Date())\r\ndia = Day(Date())\r\n\r\nnum=(senha)\r\n\r\nREM This line calls the macro subroutine\r\nsubSub1_\r\n\r\nsub subSub1_()\r\n   autECLSession.autECLOIA.WaitForAppAvailable\r\n   \r\n   autECLSession.autECLOIA.WaitForInputReady\r\n   autECLSession.autECLPS.SendKeys \"rparobotstbanco\"&\"@\"&(num)\r\n   autECLSession.autECLOIA.WaitForInputReady\r\n   autECLSession.autECLPS.SendKeys \"[enter]\"\r\n   \r\n   autECLSession.autECLPS.WaitForAttrib 1,1,\"20\",\"3c\",3,10000\r\n\r\n   autECLSession.autECLPS.Wait 1125 \r\n\r\n   autECLSession.autECLOIA.WaitForAppAvailable\r\n   \r\n   autECLSession.autECLOIA.WaitForInputReady\r\n   autECLSession.autECLPS.SendKeys \"[enter]\"\r\n   \r\n   autECLSession.autECLPS.WaitForAttrib 22,23,\"00\",\"3c\",3,10000\r\n\r\n   autECLSession.autECLPS.WaitForCursor 22,24,10000\r\n\r\n   autECLSession.autECLOIA.WaitForAppAvailable\r\n   \r\n   autECLSession.autECLOIA.WaitForInputReady\r\n   autECLSession.autECLPS.SendKeys \"13\"\r\n   autECLSession.autECLOIA.WaitForInputReady\r\n   autECLSession.autECLPS.SendKeys \"[enter]\"\r\n   \r\n   autECLSession.autECLPS.WaitForAttrib 8,2,\"00\",\"3c\",3,10000\r\n\r\n   autECLSession.autECLPS.WaitForCursor 8,3,10000\r\n\r\n   autECLSession.autECLOIA.WaitForAppAvailable\r\n   \r\n   autECLSession.autECLOIA.WaitForInputReady\r\n   autECLSession.autECLPS.SendKeys \"[tab]\"\r\n   autECLSession.autECLOIA.WaitForInputReady\r\n   autECLSession.autECLPS.SendKeys \"[tab]\"\r\n   autECLSession.autECLOIA.WaitForInputReady\r\n   autECLSession.autECLPS.SendKeys \"[tab]\"\r\n   autECLSession.autECLOIA.WaitForInputReady\r\n   autECLSession.autECLPS.SendKeys \"[tab]\"\r\n   autECLSession.autECLOIA.WaitForInputReady\r\n   autECLSession.autECLPS.SendKeys \"[tab]\"\r\n   autECLSession.autECLOIA.WaitForInputReady\r\n   autECLSession.autECLPS.SendKeys \"[tab]\"\r\n   autECLSession.autECLOIA.WaitForInputReady\r\n   autECLSession.autECLPS.SendKeys \"[tab]\"\r\n   autECLSession.autECLOIA.WaitForInputReady\r\n   autECLSession.autECLPS.SendKeys \"[tab]\"\r\n   autECLSession.autECLOIA.WaitForInputReady\r\n   autECLSession.autECLPS.SendKeys \"1\"\r\n   autECLSession.autECLOIA.WaitForInputReady\r\n   autECLSession.autECLPS.SendKeys \"[enter]\"\r\n   \r\n   autECLSession.autECLPS.WaitForAttrib 5,43,\"00\",\"3c\",3,10000\r\n\r\n   autECLSession.autECLPS.WaitForCursor 5,44,10000\r\n\r\n   autECLSession.autECLOIA.WaitForAppAvailable\r\n   \r\n   autECLSession.autECLOIA.WaitForInputReady\r\n   autECLSession.autECLPS.SendKeys \"[tab]\"\r\n   autECLSession.autECLOIA.WaitForInputReady\r\n   autECLSession.autECLPS.SendKeys \"[tab]\"\r\n   autECLSession.autECLOIA.WaitForInputReady\r\n   autECLSession.autECLPS.SendKeys \"[tab]\"\r\n   autECLSession.autECLOIA.WaitForInputReady\r\n   autECLSession.autECLPS.SendKeys \"[tab]\"\r\n   autECLSession.autECLOIA.WaitForInputReady\r\n   autECLSession.autECLPS.SendKeys \"[tab]\"\r\n   autECLSession.autECLOIA.WaitForInputReady\r\n   autECLSession.autECLPS.SendKeys \"[tab]\"\r\n   autECLSession.autECLOIA.WaitForInputReady\r\n   autECLSession.autECLPS.SendKeys \"[tab]\"\r\n   autECLSession.autECLOIA.WaitForInputReady\r\n   autECLSession.autECLPS.SendKeys \"[tab]\"\r\n   autECLSession.autECLOIA.WaitForInputReady\r\n   autECLSession.autECLPS.SendKeys \"[tab]\"\r\n   autECLSession.autECLOIA.WaitForInputReady\r\n   autECLSession.autECLPS.SendKeys \"[tab]\"\r\n   autECLSession.autECLOIA.WaitForInputReady\r\n   autECLSession.autECLPS.SendKeys \"EM\"\r\n   autECLSession.autECLOIA.WaitForInputReady\r\n   autECLSession.autECLPS.SendKeys \"[enter]\"\r\n   \r\n   autECLSession.autECLPS.WaitForAttrib 7,31,\"00\",\"3c\",3,10000\r\n\r\n   autECLSession.autECLPS.WaitForCursor 7,32,10000\r\n\r\n   autECLSession.autECLOIA.WaitForAppAvailable\r\n   \r\n\r\n   autECLSession.autECLOIA.WaitForInputReady\r\n   autECLSession.autECLPS.SendKeys \"[tab]\"\r\n   autECLSession.autECLOIA.WaitForInputReady\r\n   autECLSession.autECLPS.SendKeys \"facturas_IVA\"&(ano&mes&dia)\r\n   autECLSession.autECLOIA.WaitForInputReady\r\n   autECLSession.autECLPS.SendKeys \"[tab]\"\r\n   autECLSession.autECLOIA.WaitForInputReady\r\n   autECLSession.autECLPS.SendKeys \"valordirecto@bancovalor.ao\"\r\n   autECLSession.autECLOIA.WaitForInputReady\r\n   autECLSession.autECLPS.SendKeys \"[enter]\"\r\n   \r\n   autECLSession.autECLPS.WaitForAttrib 7,31,\"00\",\"3c\",3,10000\r\n\r\n   autECLSession.autECLPS.Wait 14953 \r\n\r\n   autECLSession.autECLOIA.WaitForAppAvailable\r\n   \r\n   autECLSession.autECLOIA.WaitForInputReady\r\n   autECLSession.autECLPS.SendKeys \"[pf3]\"\r\n   \r\n   autECLSession.autECLPS.WaitForAttrib 22,23,\"00\",\"3c\",3,10000\r\n\r\n   autECLSession.autECLPS.WaitForCursor 22,24,10000\r\n\r\n   autECLSession.autECLOIA.WaitForAppAvailable\r\n   \r\n   autECLSession.autECLOIA.WaitForInputReady\r\n   autECLSession.autECLPS.SendKeys \"89\"\r\n   autECLSession.autECLOIA.WaitForInputReady\r\n   autECLSession.autECLPS.SendKeys \"[enter]\"\r\nend sub"
replaceText --texttoparse "${macro}" --textpattern "(senha)" --replacement "${banka}" macro=value
writeToFile --value "${macro}" --file "C:\\Users\\RPAROBOTST\\AppData\\Roaming\\IBM\\Client Access\\Emulator\\private\\@extracaoQueriePRD.mac" --encoding "Default" --overwrite  caminhoPadrao=value
delay --timeout "00:00:02"
//fileCopy --from "${caminhoPadrao}" --to "C:\\Users\\RPAROBOTS"
endSub
beginSub --name ObterSenha
getEnvVar --name "IBMRPA-BANKA" --target "User" banka=value
base64ToText --source "${banka}" --encoding "UTF8" sucesso=success banka=value
logMessage --message vvv --type "Info"
endSub
beginSub --name eliminarMacros
getSpecialFolder --folder "UserProfile" caminhoUsuario=value
getFiles --path "${caminhoUsuario}\\AppData\\Roaming\\IBM\\Client Access\\Emulator\\private" --filemask "*.mac" listaFicheiros=value
foreach --collection "${listaFicheiros}" --variable "${nomeFicheiro}"
	fileDelete --file "${nomeFicheiro}"
endFor
endSub
beginSub --name ConversorXMLpXLSX
smtpConnect --smtphost "mail.bancovalor.ao" --smtpport 587 --smtpusessl  connection=value
exchangeConnect --exchangeversion "Exchange2013" --exchangeurl "https://mail.bancovalor.ao/EWS/Exchange.asmx" --enablesslvalidation  --username "banco.valor" --mailusername "banco.valor@bancovalor.ao" --mailpassword "v+HVl=#D\\,Dg" connection=value
getCurrentDateAndTime --localorutc "LocalTime" --getcurrentdateonly  dataValidarDiretorios=value
getDatePart --date "${dataValidarDiretorios}" --type "Years" ano=value
getDatePart --date "${dataValidarDiretorios}" --type "Months" mes=value
getDatePart --date "${dataValidarDiretorios}" --type "Days" dia=value
setVar --name "${nomeFicheiroQuerie241}" --value "facturas_IVA${ano}${mes}${dia}"
ifFolder --path "Y:\\" directorioRPA=value
if --left "${directorioRPA}" --operator "Is_True"
	logMessage --message "Existe/DisponÃ­Â­vel o diretorio das queries" --type "Info"
	setVar --name "${caminhoQuerie241}" --value "Y:\\${nomeFicheiroQuerie241}.xml"
else
	//ENVIAR EMAIL AOS SPONSORÂ´S
	logMessage --message "NÃ£o estÃ¡Â¡ DisponÃ­Â­vel o diretorio das queries" --type "Info"
endIf
//Verifica se o ficheiro QUERIE existe no Directorio RPA
for --variable ${validarTentativas} --from 1 --to 10 --step 1
	ifFile --file "Y:\\${nomeFicheiroQuerie241}.xml" querieExiste=value
	if --left "${querieExiste}" --operator "Is_True"
		break
	else
		delay --timeout "00:10:00"
	endIf
next
if --left "${querieExiste}" --operator "Is_True" --negate 
	emailSend --connection ${connection} --to ${paraEmail} --from "banco.valor@bancovalor.ao" --cc ${emCC} --subject "RPA - Conversor XML para XLSX | Query241 nÃ£o encontrada" --bodytype "Text" --body "SaudaÃ§Ãµes,\r\n\r\nA query241 nÃ£o foi encontrada no diretorio das queries.\r\n\r\nNota: Eventualmente o BOT de extraÃ§Ã£o nÃ£o foi executado, ou tempo de espera equivalente a 40min esgotaram.\r\n\r\nQueiram por favor validar com maior brevidade possÃ­vel.\r\n\r\nCordialmente,"
	failTest --message "Falha ao encontrar Query241"
endIf
setVar --name "${caminhoQuerie241}" --value "Y:\\${nomeFicheiroQuerie241}.xml"
//### Copiar o ficheiro 241 no diretorio DCCG_IVA ###
fileCopy --from "${caminhoQuerie241}" --to "${diretorioDCCG_IVA}"
//### Termina o momento da cÃ³pia ###
delay --timeout "00:00:40"
setVar --name "${diretorio}" --value "Z:\\DCCG - IVA\\RPAROBOT bvalor01"
setVar --name "${ficheiroXML}" --value "${diretorio}\\facturas_IVA${ano}${mes}${dia}.xml"
setVar --name "${nomeFicheiroExcel}" --value "query241.xlsx"

fileRename --file "${ficheiroXML}" --newname "${nomeFicheiroExcel}.xls" ficheiroExcel=value

powerShell --apartmentState "MTA" --script "$xlsSpreadsheet = 51\r\n$Excel = New-Object -Com Excel.Application\r\n$WorkBook = $Excel.Workbooks.Open(\"${ficheiroExcel}\")\r\n$WorkBook.SaveAs(\"${diretorio}\\${nomeFicheiroExcel}.xlsx\", $xlsSpreadsheet)\r\n$Excel.Quit()" --comment Converter
fileDelete --file "${ficheiroExcel}"
repeat
	delay --timeout "00:00:05"
	isFileInUse --file "${diretorio}\\${nomeFicheiroExcel}.xlsx" success=value
until --left "${success}" --operator "Is_True"
logMessage --message "# Abra o arquivo Excel\r\n$excel = New-Object -ComObject Excel.Application\r\n$workbook = $excel.Workbooks.Open(\"${diretorio}\\${nomeFicheiroExcel}.xlsx\")\r\n\r\n# Selecione a planilha na qual vocÃƒÂª deseja remover as linhas\r\n$worksheet = $workbook.Worksheets.Item(\"Sheet1\")\r\n\r\n# Remova as primeiras quatro linhas\r\n$range = $worksheet.Range(\"A1:A4\").EntireRow\r\n$range.Delete()\r\n\r\n# Salve as alteraÃƒÂ§ÃƒÂµes e feche o arquivo\r\n$workbook.Save()\r\n$workbook.Close()\r\n$excel.Quit()\r\n" --type "Info"

powerShell --apartmentState "MTA" --script "# Abra o arquivo Excel\r\n$excel = New-Object -ComObject Excel.Application\r\n$workbook = $excel.Workbooks.Open(\"${diretorio}\\${nomeFicheiroExcel}.xlsx\")\r\n\r\nif ($workbook -eq $null) {\r\n    $d =  \"NÃƒÂ£o foi possÃƒÂ­vel abrir o arquivo\"\r\n    Write-Warning $d\r\n} else {\r\n\r\n    $worksheet = $workbook.Worksheets.Item(1)\r\n\r\n    if ($worksheet -eq $null) {\r\n         $d = \"A planilha especificada nÃƒÂ£o existe no arquivo\"\r\n         Write-Warning $d\r\n    } else {\r\n        $range = $worksheet.Range(\"A1:A4\").EntireRow\r\n        $range.Delete()\r\n        $workbook.Save()\r\n        $d = \"Success\"\r\n        Write-Warning $d\r\n    }\r\n}\r\n    $workbook.Close()\r\n    $excel.Quit()" --comment "Remover as 4 primeira linhas" success=success errors=errors warn=warnings
repeat
	delay --timeout "00:00:05"
	isFileInUse --file "${diretorio}\\${nomeFicheiroExcel}.xlsx" success=value
until --left "${success}" --operator "Is_True"
excelOpen --file "${diretorio}\\${nomeFicheiroExcel}.xlsx" --savechanges  excel=value
excelSet --value Morada2 --file ${excel} --getfirstsheet  --row 1 --column 13 --comment "Existe duas colunas com o mesmo nome, entÃƒÂ£o precisei alterar o nome da segunda"
excelGetTable --file ${excel} --getfirstsheet  --fromrow 5 --fromcolumn 1 --hasheaders  tabela=value
excelClose --file ${excel}
logMessage --message "A accao de copia da query241 e conversao do mesmo para xml foi procedida com sucesso.\r\n: ${success}" --type "Info"

endSub"	âáR1¿I”eðð-„#*21.0.3.0